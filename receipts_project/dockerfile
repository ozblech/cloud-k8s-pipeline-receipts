# Use an official Python base image
FROM python:3.11-slim-bullseye AS builder

# Set environment variables
# This tells Python not to write .pyc files (compiled bytecode files).
# These files are unnecessary in Docker images and can clutter the container filesystem.
ENV PYTHONDONTWRITEBYTECODE=1
# This ensures that Python output is sent straight to the terminal (stdout) without being buffered.
# This is useful for logging and debugging, especially in a Docker environment.
ENV PYTHONUNBUFFERED=1

# Install OS-level dependencies
RUN apt-get update && apt-get install -y --no-install-recommends\
    gcc \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Copy requirements (if using requirements.txt)
COPY requirements.txt .

# Install dependencies into a folder (not global site-packages)
RUN pip install --no-cache-dir --prefix=/install -r requirements.txt


# Stage 2: Runtime
FROM python:3.11-slim-bullseye

WORKDIR /app

# Copy installed dependencies from builder
COPY --from=builder /install /usr/local

# Copy only the application source
COPY main.py .

# Security: create a non-root user
RUN useradd -m appuser
USER appuser

EXPOSE 5000

# Add HEALTHCHECK
HEALTHCHECK --interval=30s --timeout=5s --retries=3 \
  CMD curl -f http://localhost:5000/health || exit 1

CMD ["python", "main.py"]
