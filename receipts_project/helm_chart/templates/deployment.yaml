apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort:  {{ .Values.image.containerPort }}
          env:
            - name: DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: DB_CONNECTION_STRING
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: DB_PASSWORD
            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: S3_BUCKET_NAME
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: S3_REGION  
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: AWS_SECRET_ACCESS_KEY         
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.image.containerPort }}
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 5
            successThreshold: 1

          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.image.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1

