apiVersion: apps/v1
kind: Deployment
metadata:
  name: receipts-api
  labels:
    app: receipts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: receipts
  template:
    metadata:
      labels:
        app: receipts
    spec:
      containers:
        - name: receipts
          image: ozblech/receipts:latest
          ports:
            - containerPort: 5000
          env:
            - name: DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: DB_CONNECTION_STRING
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: DB_PASSWORD
            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: S3_BUCKET_NAME
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: S3_REGION
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: receipts-secrets
                  key: AWS_SECRET_ACCESS_KEY

# ############## in order to improve: #############
# Using latest is risky â†’ every redeploy could pull a different image version unexpectedly.
# Add resources block:
#          resources:
#            requests:
#              memory: "256Mi"
#              cpu: "250m"
#            limits:
#              memory: "512Mi"
#              cpu: "500m"
#      imagePullSecrets:
#        - name: regcred  # Assuming you have a secret for pulling images from a private registry
#
# Add readiness or liveness probes
# livenessProbe:
#   httpGet:
#     path: /health
#     port: 3000
#   initialDelaySeconds: 10
#   periodSeconds: 15

# readinessProbe:
#   httpGet:
#     path: /health
#     port: 3000
#   initialDelaySeconds: 5
#   periodSeconds: 10
#
# Run as non-root user:
# securityContext:
#   runAsUser: 1000
#   runAsGroup: 1000
#   runAsNonRoot: true
---
# receipts-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: receipts-service
spec:
  selector:
    app: receipts
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30007
  type: NodePort