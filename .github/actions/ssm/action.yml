name: Run-SSM-Command
description: "Runs a command on an EC2 instance using AWS SSM."

inputs:
  aws_account_id:
    description: "AWS Account ID to construct the role ARN"
    required: true
  instance_id:
    description: "The ID of the EC2 instance to run the command on"
  commands:
    description: "The command to run on the EC2 instance"
    required: true
outputs:
  command_output:
    description: "Output of the command execution"
    value: ${{ steps.run-ssm-command.outputs.command_output }}

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials (via OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: "arn:aws:iam::${{ inputs.aws_account_id }}:role/github-actions-role"
        aws-region: us-west-2

    - name: Run command on EC2 instance
      shell: bash
      run: |
        COMMAND_ID=$(aws ssm send-command \
          --instance-ids ${{ inputs.instance_id }} \
          --document-name "AWS-RunShellScript" \
          --comment "Running command on EC2 instance" \
          --parameters "$(jq -nc --argjson cmds '${{ inputs.commands }}' '{commands: $cmds}')" \
          --output text)

          echo "COMMAND_ID=$COMMAND_ID" >> $GITHUB_ENV

    - name: Wait for command result and fetch output
      id: get-output
      shell: bash
      run: |
        # Wait until the command finishes
        for i in {1..30}; do
          STATUS=$(aws ssm list-command-invocations \
            --command-id "$COMMAND_ID" \
            --details \
            --query "CommandInvocations[0].Status" \
            --output text)

          echo "Status: $STATUS"
          if [[ "$STATUS" == "Success" || "$STATUS" == "Failed" || "$STATUS" == "Cancelled" || "$STATUS" == "TimedOut" ]]; then
            break
          fi
          sleep 5
        done

        # Fetch command output
        OUTPUT=$(aws ssm list-command-invocations \
          --command-id "$COMMAND_ID" \
          --details \
          --query "CommandInvocations[0].CommandPlugins[0].Output" \
          --output text)

        echo "Command Output: $OUTPUT"
        echo "command_output<<EOF" >> $GITHUB_OUTPUT
        echo "$OUTPUT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
          