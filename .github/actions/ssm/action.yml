name: Run-SSM-Command
description: "Runs a command on an EC2 instance using AWS SSM."

inputs:
  aws_account_id:
    description: "AWS Account ID to construct the role ARN"
    required: true
  instance_id:
    description: "The ID of the EC2 instance to run the command on"
  commands:
    description: "The command to run on the EC2 instance"
    required: true
outputs:
  command_output:
    description: "Output of the command execution"
    value: ${{ steps.run-ssm-command.outputs.command_output }}

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials (via OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: "arn:aws:iam::${{ inputs.aws_account_id }}:role/github-actions-role"
        aws-region: us-west-2

    - name: Run command on EC2 instance
      shell: bash
      run: |
        COMMAND_ID=$(aws ssm send-command \
          --instance-ids ${{ inputs.instance_id }} \
          --document-name "AWS-RunShellScript" \
          --comment "Running command on EC2 instance" \
          --parameters commands=${{ inputs.commands }} \
          --query "Command.CommandId" \
          --output text)

          echo "command_id=${COMMAND_ID}" >> $GITHUB_OUTPUT

    - name: Wait for command to finish
      run: |
        echo "Waiting for command ID: ${{ steps.send.outputs.command_id }}"
        while true; do
          STATUS=$(aws ssm list-command-invocations \
            --command-id "${{ steps.send.outputs.command_id }}" \
            --details \
            --query "CommandInvocations[0].Status" \
            --output text)

          echo "Current status: $STATUS"

          if [[ "$STATUS" == "Success" || "$STATUS" == "Cancelled" || "$STATUS" == "Failed" ]]; then
            break
          fi

          sleep 5
        done
      shell: bash

    - name: Get command output
      id: get-output
      run: |
        OUTPUT=$(aws ssm get-command-invocation \
          --command-id "${{ steps.send.outputs.command_id }}" \
          --instance-id "${{ inputs.instance_id }}" \
          --query "StandardOutputContent" \
          --output text)

        echo "command_output<<EOF" >> "$GITHUB_OUTPUT"
        echo "$OUTPUT" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"
      shell: bash
          