name: Extract Image Tag
description: "Generates Docker image tag from latest Git tag and short SHA"

outputs:
  current_image_tag:
    description: "Current image tag without 'v' prefix (e.g., 1.0.14-a1b2c3d)"
    value: ${{ steps.extract.outputs.current_image_tag }}
  current_version:
    description: "Current version with 'v' prefix (e.g., v1.0.14)"
    value: ${{ steps.extract.outputs.current_version }}
  previous_image_tag:
    description: "Previous image tag (e.g., 1.0.13-a1b2c3d)"
    value: ${{ steps.extract.outputs.previous_image_tag }}
  previous_version:
    description: "Previous version with 'v' prefix (e.g., v1.0.13)"
    value: ${{ steps.extract.outputs.previous_version }}

runs:
  using: "composite"
  steps:
    - name: Extract Git tag and SHA
      id: extract
      shell: bash
      run: |
        git fetch --tags

        # Get the two most recent tags (sorted by creation date)
        TAGS=$(git tag --sort=-creatordate | grep '^v' | head -n 2)
        TAG=$(echo "$TAGS" | sed -n '1p')
        PREV_TAG=$(echo "$TAGS" | sed -n '2p')

        # If no tags exist, default
        TAG=${TAG:-v1.0.0}
        PREV_TAG=${PREV_TAG:-v1.0.0}

        # Short SHA of current commit
        SHORT_SHA=$(git rev-parse --short HEAD)

        # Short SHA of previous commit
        PREV_SHORT_SHA=$(git rev-parse --short "$PREV_TAG")

        # Strip 'v' prefix
        CLEAN_TAG="${TAG#v}"
        CLEAN_PREV_TAG="${PREV_TAG#v}"

        # Create current image tag based on current tag + SHA
        echo "current_image_tag=${CLEAN_TAG}-${SHORT_SHA}" >> $GITHUB_OUTPUT
        echo "current_version=v${CLEAN_TAG}" >> $GITHUB_OUTPUT

        # Output previous image tag
        echo "previous_image_tag=${CLEAN_PREV_TAG}-${PREV_SHORT_SHA}" >> $GITHUB_OUTPUT
        echo "previous_version=${PREV_TAG}" >> $GITHUB_OUTPUT