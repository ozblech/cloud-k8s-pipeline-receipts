name: Bump Version
description: "Bumps the version based on the latest Git tag and short SHA"

outputs:
  new_image_tag:
    description: "Generated image tag (e.g., 1.0.15-a1b2c3d)"
    value: ${{ steps.extract.outputs.new_image_tag }}
  new_version:
    description: "Next version in X.Y.Z format (e.g., 1.0.15)"
    value: ${{ steps.extract.outputs.new_version }}

runs:
  using: "composite"
  steps:
    - name: Extract Git tag and SHA
      id: extract
      shell: bash
      run: |
        set -euo pipefail

        echo "🔄 Fetching all tags..."
        git fetch --tags

        echo "🔍 Getting current commit SHA..."
        CURRENT_SHA=$(git rev-parse HEAD)
        SHORT_SHA=$(git rev-parse --short HEAD)

        echo "🔍 Getting latest tag starting with 'v'..."
        LATEST_TAG=$(git tag --sort=-creatordate | grep '^v' | head -n 1 || true)
        LATEST_TAG=${LATEST_TAG:-v1.0.0}
        echo "✅ Latest tag: $LATEST_TAG"

        VERSION="${LATEST_TAG#v}"
        echo "ℹ️ Parsed version: $VERSION"

        echo "🔎 Checking if current commit is already tagged..."
        EXISTING_TAG=$(git tag --points-at "$CURRENT_SHA" | grep '^v' | head -n 1 || true)

        if [ -n "$EXISTING_TAG" ]; then
          echo "⚠️ Commit is already tagged with: $EXISTING_TAG. Skipping version bump."
          echo "new_image_tag=${VERSION}-${SHORT_SHA}" >> "${GITHUB_OUTPUT}"
          echo "new_version=${LATEST_TAG}" >> "${GITHUB_OUTPUT}"
        else
          echo "🧮 Bumping patch version..."
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          echo "✅ New version: v${NEW_VERSION}"

          echo "new_image_tag=${NEW_VERSION}-${SHORT_SHA}" >> "${GITHUB_OUTPUT}"
          echo "new_version=v${NEW_VERSION}" >> "${GITHUB_OUTPUT}"
        fi