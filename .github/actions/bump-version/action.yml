name: Bump Version
description: "Bumps the version based on the latest Git tag and short SHA"

outputs:
  new_image_tag:
    description: "Generated image tag (e.g., 1.0.15-a1b2c3d)"
    value: ${{ steps.extract.outputs.new_image_tag }}
  new_version:
    description: "Next version in X.Y.Z format (e.g., 1.0.15)"
    value: ${{ steps.extract.outputs.new_version }}

runs:
  using: "composite"
  steps:
    - name: Extract Git tag and SHA
      id: extract
      shell: bash
      run: |
        git fetch --tags

        # Short SHA of current commit
        SHORT_SHA=$(git rev-parse --short HEAD)

        LATEST_TAG=$(git tag --sort=-creatordate | grep '^v' | head -n 1)

        # If no tags exist, default
        LATEST_TAG=${LATEST_TAG:-v1.0.0}

        # Strip 'v' prefix
        CLEAN_TAG="${LATEST_TAG#v}"

        # Create image tag based on current tag + SHA
        echo "current_image_tag=${CLEAN_TAG}-${SHORT_SHA}" >> $GITHUB_OUTPUT

        # Check if any tag points to the current commit
        EXISTING_TAG=$(git tag --points-at "$CURRENT_SHA" | head -n 1)
        if [ -n "$EXISTING_TAG" ]; then
          echo "⚠️ Commit already tagged with: $EXISTING_TAG. Skipping tag creation."
          echo "new_image_tag=${CLEAN_TAG}-${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "new_version=v${CLEAN_TAG}" >> $GITHUB_OUTPUT
        else         
          # Bump patch version
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CLEAN_TAG"
          NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
          echo "new_image_tag=${NEW_VERSION}-${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "new_version=v${NEW_VERSION}" >> $GITHUB_OUTPUT
        fi

        




        