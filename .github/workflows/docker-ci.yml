name: CI - Docker Build & Push and Tag

on:
  push:
    branches: [main]
    paths:
      - 'receipts_project/**'
      - '.github/**'
  
permissions:
  contents: write # Needed to push version tags to remote repo

jobs:
  
  # integration-tests:
     
  bump-version:
    runs-on: ubuntu-latest
    if: >
        (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
        github.event_name == 'workflow_dispatch'
    outputs:
      new_image_tag: ${{ steps.bump-version.outputs.new_image_tag }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Check current image tag from dockerhub
        id: extract-image-tag-dockerhub
        uses: ./.github/actions/extract-image-tag-dockerhub
        with:
          image-repo: ${{ vars.IMAGE_REPO }}  # e.g., ozblech/receipts-api

      - name: Echo current image tag from dockerhub
        run: |
            echo "Current image tag from Docker Hub: ${{ steps.extract-image-tag-dockerhub.outputs.current_image_sha }}"
            echo "CURRENT_IMAGE_SHA=${{ steps.extract-image-tag-dockerhub.outputs.current_image_sha }}" >> $GITHUB_ENV

      - name: Bump version
        id: bump-version
        uses: ./.github/actions/bump-version-sha

      - name: Echo new image tag
        run: |
            echo "New image tag: ${{ steps.bump-version.outputs.new_image_tag }}"
            echo "New version: ${{ steps.bump-version.outputs.new_version }}"

      - name: Fail if new image tag is the same as current
        run: |
            if [ "${{ steps.bump-version.outputs.new_image_tag }}" == "${{ steps.extract-image-tag-dockerhub.outputs.current_image_sha }}" ]; then
              echo "New image tag is the same as current. Failing the job."
              exit 1
            else
              echo "New image tag is different from current. Proceeding."
            fi

  docker-build-push:
    runs-on: ubuntu-latest
    needs: bump-version
    if: >
        (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
        github.event_name == 'workflow_dispatch' 
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Debug pushed image reference
        run: | 
          echo "Pushing tag: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DEPLOYMENT_NAME }}:${{ needs.bump-version.outputs.new_image_tag }}"
        

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./receipts_project
          file: ./receipts_project/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DEPLOYMENT_NAME }}:${{ needs.bump-version.outputs.new_image_tag }}

  # push-version-tag:
  #   runs-on: ubuntu-latest
  #   needs: [docker-build-push, bump-version]
  #   if: >
  #       (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
  #       github.event_name == 'workflow_dispatch'
  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0  # Required to get full history and tags

  #     - name: Push new Git tag (if it doesn't already exist)
  #       run: |
  #           git config user.name "github-actions"
  #           git config user.email "github-actions@github.com"

  #           NEW_VERSION_TAG="${{ needs.bump-version.outputs.new_version }}"
  #           if git rev-parse "$NEW_VERSION_TAG" >/dev/null 2>&1; then
  #           echo "Tag $NEW_VERSION_TAG already exists. Skipping tag creation."
  #           else
  #           git tag "$NEW_VERSION_TAG"
  #           git push origin "$NEW_VERSION_TAG"
  #           fi

