name: CI - Docker Build & Push and Tag

on:
  push:
    branches: [main]
    paths:
      - 'receipts_project/**'
      - '.github/**'

  workflow_dispatch:
    inputs:
      bump_type:
        description: "Select version bump type"
        required: true
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major
  
permissions:
  contents: write # Needed to push version tags to remote repo

jobs:
  
  # integration-tests:
     
  bump-version:
    runs-on: ubuntu-latest
    if: >
        (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
        github.event_name == 'workflow_dispatch'
    outputs:
      new_image_tag: ${{ steps.bump-version.outputs.new_image_tag }}
      new_version: ${{ steps.bump-version.outputs.new_version }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set bump type
        id: detect-bump
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "bump_type=${{ github.event.inputs.bump_type }}" >> $GITHUB_OUTPUT
          else
            COMMIT_MSG=$(git log -1 --pretty=%B)
            if [[ "$COMMIT_MSG" == *"bump:major"* ]]; then
              echo "bump_type=major" >> $GITHUB_OUTPUT
            elif [[ "$COMMIT_MSG" == *"bump:minor"* ]]; then
              echo "bump_type=minor" >> $GITHUB_OUTPUT
            else
              echo "bump_type=patch" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Bump version
        id: bump-version
        uses: ./.github/actions/bump-version
        with:
          bump-type: ${{ steps.detect-bump.outputs.bump_type }}

      - name: Echo new image tag
        run: |
            echo "New image tag: ${{ steps.bump-version.outputs.new_image_tag }}"
            echo "New version: ${{ steps.bump-version.outputs.new_version }}"

  docker-build-push:
    runs-on: ubuntu-latest
    needs: bump-version
    if: >
        (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
        github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Debug pushed image reference
        run: | 
          echo "Pushing tag: ${{ secrets.DOCKERHUB_USERNAME }}/receipts-api:${{ needs.bump-version.outputs.new_image_tag }}"
        

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./receipts_project
          file: ./receipts_project/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/receipts-api:${{ needs.bump-version.outputs.new_image_tag }}

  push-version-tag:
    runs-on: ubuntu-latest
    needs: [docker-build-push, bump-version]
    if: >
        (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
        github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to get full history and tags

      - name: Push new Git tag (if it doesn't already exist)
        run: |
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"

            NEW_VERSION_TAG="${{ needs.bump-version.outputs.new_version }}"
            if git rev-parse "$NEW_VERSION_TAG" >/dev/null 2>&1; then
            echo "Tag $NEW_VERSION_TAG already exists. Skipping tag creation."
            else
            git tag "$NEW_VERSION_TAG"
            git push origin "$NEW_VERSION_TAG"
            fi

