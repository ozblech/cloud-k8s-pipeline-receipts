name: CI - Docker Build & Push and Tag

on:
  push:
    branches: [main]
    paths:
      - 'receipts_project/**'
      - '.github/**'
  
permissions:
  contents: write # Needed to push Git tags

jobs:
  
  # integration-tests:
     
  extract-image-tag:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      new_image_tag: ${{ steps.extract-image-tag.outputs.new_image_tag }}
      new_version: ${{ steps.extract-image-tag.outputs.new_version }}
      current_image_tag: ${{ steps.extract-image-tag.outputs.current_image_tag }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Extract image tag
        id: extract-image-tag
        uses: ./.github/actions/extract-image-tag
        with:
          working-directory: receipts_project

  docker-build-push:
    runs-on: ubuntu-latest
    needs: extract-image-tag
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Debug pushed image reference
        run: | 
          echo "Pushing tag: ${{ secrets.DOCKERHUB_USERNAME }}/receipts-api:${{ needs.extract-image-tag.outputs.new_image_tag }}"
        

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./receipts_project
          file: ./receipts_project/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/receipts-api:${{ needs.extract-image-tag.outputs.new_image_tag }}

  push-version-tag:
    runs-on: ubuntu-latest
    needs: [docker-build-push, extract-image-tag]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to get full history and tags

      - name: Push new Git tag (if it doesn't already exist)
        run: |
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"

            TAG="${{ needs.extract-image-tag.outputs.new_version }}"
            if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping tag creation."
            else
            git tag "$TAG"
            git push origin "$TAG"
            fi

