name: CD - Deploy with kubectl

permissions:
  id-token: write  # Required for OIDC
  contents: read   # Required for actions/checkout

on:
  workflow_run:
    workflows: ["CI - Docker Build & Push and Tag"]
    types:
      - completed

jobs:
  deploy:
    name: Deploy to EC2 Minikube
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            fetch-depth: 0  # This ensures all history and tags are fetched

      - name: Get latest Git tag
        id: extract-image-tag
        uses: ./.github/actions/extract-image-tag

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
    
      - name: echo current image tag and minikube IP
        run: |
            echo "Current image tag: ${{ steps.extract-image-tag.outputs.current_image_tag }}"
            echo "Current version: ${{ steps.extract-image-tag.outputs.current_version }}"

      - name: Fetch EC2 public IP
        id: fetch-minikube-ec2-ip
        uses: ./.github/actions/fetch-ec2-public-ip
        with:
          tag_name: minikube-ec2
          aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}

      - name: Print DNS
        run: echo "DNS is ${{ steps.fetch-minikube-ec2-ip.outputs.public_dns }}"

      - name: Deploy to Minikube via SSH
        env:
          IMAGE_TAG: ${{ steps.extract-image-tag.outputs.current_image_tag }}
          IMAGE_REPO: ozblech/receipts-api
          DEPLOYMENT_NAME: receipts-api
          EC2_PUBLIC_DNS: ${{ steps.fetch-minikube-ec2-ip.outputs.public_dns }}
        run: |
          # Copy Helm chart to EC2 instance 
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@$EC2_PUBLIC_DNS "mkdir -p ~/receipts_project"
          scp -o StrictHostKeyChecking=no -i ec2_key.pem -r ./receipts_project/helm_chart ec2-user@$EC2_PUBLIC_DNS:~/receipts_project/


          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@$EC2_PUBLIC_DNS << EOF
            echo "ðŸš€ Deploying image: $IMAGE_REPO:$IMAGE_TAG"

            # Ensure kubectl is using Minikube
            export KUBECONFIG=\$HOME/.kube/config

            # Set new image in the deployment
            kubectl set image deployment/$DEPLOYMENT_NAME \
              receipts-api=$IMAGE_REPO:$IMAGE_TAG

            # Set the image in the deployment using Helm          
            # helm upgrade $DEPLOYMENT_NAME ./receipts_project/helm_chart \
            # --install \
            # --namespace default \
            # --set image.repository=$IMAGE_REPO,image.tag=$IMAGE_TAG

            # Verify rollout status
            kubectl rollout status deployment/$DEPLOYMENT_NAME -n default
          EOF