name: CD - Rollback Deployment

permissions:
  id-token: write # Required for OIDC
  contents: read

on:
  workflow_dispatch:
    inputs:
      revision:
        description: 'Revision number to roll back to (leave empty for previous)'
        required: false
        default: ''

jobs:
  rollback:
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: ozblech/receipts-api
      DEPLOYMENT_NAME: receipts-api

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Fetch EC2 public IP
        id: fetch-minikube-ec2-ip
        uses: ./.github/actions/fetch-ec2-public-ip
        with:
          tag_name: minikube-ec2
          aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}

      - name: Get latest Git tag
        if: ${{ github.event.inputs.revision == '' }}
        id: get-latest-tag
        uses: ./.github/actions/extract-image-tag

      - name: Echo previous image tag
        if: ${{ github.event.inputs.revision == '' }}
        run: |
            echo "Previous image tag: ${{ steps.get-latest-tag.outputs.previous_image_tag }}"   

      # - name: Rollback via SSH
      #   env:
      #       REVISION_INPUT: ${{ github.event.inputs.revision }}
      #       PREVIOUS_IMAGE_TAG: ${{ steps.get-latest-tag.outputs.previous_image_tag }}
      #       EC2_PUBLIC_DNS: ${{ steps.fetch-minikube-ec2-ip.outputs.public_dns }}
      #   run: |
      #       ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@$EC2_PUBLIC_DNS << EOF
      #       export KUBECONFIG=\$HOME/.kube/config

      #       if [ -z "$REVISION_INPUT" ]; then
      #           echo "Rolling back to previous image tag: $PREVIOUS_IMAGE_TAG"
      #           kubectl set image deployment/$DEPLOYMENT_NAME receipts-api=$IMAGE_REPO:$PREVIOUS_IMAGE_TAG -n default
      #       else
      #           echo "Rolling back to revision: $REVISION_INPUT"
      #           kubectl rollout undo deployment/$DEPLOYMENT_NAME --to-revision=$REVISION_INPUT -n default
      #       fi

      #       kubectl rollout status deployment/$DEPLOYMENT_NAME -n default
      #       EOF

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: us-west-2

      # - name: Rollback via SSM to EC2
      #   env:
      #     INSTANCE_ID: ${{ steps.fetch-minikube-ec2-ip.outputs.instance_id }}
      #     REVISION_INPUT: ${{ github.event.inputs.revision }}
      #     PREVIOUS_IMAGE_TAG: ${{ steps.get-latest-tag.outputs.previous_image_tag }}
      #     EC2_PUBLIC_DNS: ${{ steps.fetch-minikube-ec2-ip.outputs.public_dns }}
      #   run: |
      #     aws ssm send-command \
      #       --instance-ids "$INSTANCE_ID" \
      #       --document-name "AWS-RunShellScript" \
      #       --comment "Rollback deployment" \
      #       --parameters 'commands=["#!/bin/bash",
      #         "export KUBECONFIG=/home/ec2-user/.kube/config",
      #         "if [ -z \"${REVISION_INPUT}\" ]; then",
      #         "  echo Rolling back to previous image tag: ${PREVIOUS_IMAGE_TAG}",
      #         "  kubectl set image deployment/${DEPLOYMENT_NAME} receipts-api=${IMAGE_REPO}:${PREVIOUS_IMAGE_TAG} -n default",
      #         "else",
      #         "  echo Rolling back to revision: ${REVISION_INPUT}",
      #         "  kubectl rollout undo deployment/${DEPLOYMENT_NAME} --to-revision=${REVISION_INPUT} -n default",
      #         "fi",
      #         "kubectl rollout status deployment/${DEPLOYMENT_NAME} -n default"
      #       ]' \
      #       --cloud-watch-output-config CloudWatchOutputEnabled=true \
      #       --region us-west-2 \
      #       --output text

      - name: Build rollback command dynamically
        id: generate-commands
        env:
          REVISION_INPUT: ${{ github.event.inputs.revision }}
          PREVIOUS_IMAGE_TAG: ${{ steps.get-latest-tag.outputs.previous_image_tag }}
          DEPLOYMENT_NAME: ${{ env.DEPLOYMENT_NAME }}
          IMAGE_REPO: ${{ env.IMAGE_REPO }}
        run: |
          jq -n --arg r "$REVISION_INPUT" \
                --arg p "$PREVIOUS_IMAGE_TAG" \
                --arg d "$DEPLOYMENT_NAME" \
                --arg i "$IMAGE_REPO" '
          {
            commands: [
              "#!/bin/bash",
              (if $r == "" then
                "echo \"Rolling back to previous image tag: \($p)\"",
                "kubectl set image deployment/\($d) receipts-api=\($i):\($p) -n default"
              else
                "echo \"Rolling back to revision: \($r)\"",
                "kubectl rollout undo deployment/\($d) --to-revision=\($r) -n default"
              end),
              "kubectl rollout status deployment/\($d) -n default"
            ]
          }' > commands.json

          echo "commands.json content:"
          cat commands.json


      - name: Rollback via SSM to EC2
        id: run-ssm-command
        env:
          INSTANCE_ID: ${{ steps.fetch-minikube-ec2-ip.outputs.instance_id }}
          commands: ${{ steps.generate-commands.outputs.commands }}
        run: |
          echo "Running command: $commands"
          aws ssm send-command \
            --instance-ids "$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Update Kubernetes deployment image" \
            --parameters file://commands.json \
            --region us-west-2 \
            --cloud-watch-output-config CloudWatchOutputEnabled=true \
            --output text


      - name: Output SSM result
        run: |
          echo "SSM Output:"
          echo "${{ steps.run-ssm-command.outputs.command_output }}"

      # - name: Print SSM command output
      #   run: |
      #     aws ssm get-command-invocation \
      #       --command-id ${{ steps.run-ssm-command.outputs.command_id }} \
      #       --instance-id ${{ steps.fetch-minikube-ec2-ip.outputs.instance_id }}
      #       --region us-west-2 \
      #       --output json

            # - name: Run SSM command using action
      #   id: run-ssm-command
      #   uses: ./.github/actions/ssm
      #   with:
      #     aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      #     instance_id: ${{ steps.fetch-minikube-ec2-ip.outputs.instance_id }}
      #     image_tag: ${{ steps.get-latest-tag.outputs.previous_image_tag }}
      #     commands: ${{ steps.generate.outputs.commands }}

