{
  "commands": [
    "export KUBECONFIG=$KUBECONFIG_PATH",
    "echo \"Fetching secrets from AWS Secrets Manager...\"",
    "SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id $SECRET_NAME --query SecretString --output text)",
    "DB_USER=$(echo \"$SECRET_JSON\" | jq -r .db_user)",
    "DB_PASSWORD=$(echo \"$SECRET_JSON\" | jq -r .db_password)",
    "DB_CONN=$(echo \"$SECRET_JSON\" | jq -r .db_connection_string)",
    "AWS_KEY_ID=$(echo \"$SECRET_JSON\" | jq -r .AWS_ACCESS_KEY_ID)",
    "AWS_SECRET=$(echo \"$SECRET_JSON\" | jq -r .AWS_SECRET_ACCESS_KEY)",

    "echo \"Creating secret.yaml file\"",
    "cat <<EOF > /helm_chart/values-secret.yaml\nsecret:\n  db_user: \"$DB_USER\"\n  db_password: \"$DB_PASSWORD\"\n  s3_bucket_name: \"$S3_BUCKET\"\n  s3_region: \"$S3_REGION\"\n  db_connection_string: \"$DB_CONN\"\n\naws:\n  AWS_ACCESS_KEY_ID: \"$AWS_KEY_ID\"\n  AWS_SECRET_ACCESS_KEY: \"$AWS_SECRET\"\nEOF",
    "chmod 600 /helm_chart/values-secret.yaml",

    "echo \"Deploying new Docker image...\"",
    "helm upgrade \"$DEPLOYMENT_NAME\" /helm_chart --install --namespace default -f /helm_chart/values.yaml -f /helm_chart/values-secret.yaml --set image.repository=$IMAGE_REPO --set image.tag=$IMAGE_TAG",
    "kubectl rollout status deployment/$DEPLOYMENT_NAME -n default --timeout=60s || (echo \"Rollout failed\" && exit 1)",
    "kubectl label deployment/$DEPLOYMENT_NAME version=$IMAGE_TAG --overwrite",

    "echo \"Cleaning up old Docker images...\"",
    "runuser -l ec2-user -c \"minikube ssh -- docker system prune -a -f\""
  ]
}